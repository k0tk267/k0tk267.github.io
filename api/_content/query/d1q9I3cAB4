{"_path":"/posts/minimal-mlops","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"一人寂しく行う小規模MLOps","description":"","excerpt":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"はじめに"},"children":[{"type":"text","value":"はじめに"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"年末に何か書こうかなぁ～と思っていたら、あと数時間で2022年が終わってしまうことが発覚した。\nそこで、ここ一年研究室で機械学習周りの実験を回す時のTipsが溜まってきたので、超特急でまとめてみる。"}]},{"type":"element","tag":"h2","props":{"id":"対象者"},"children":[{"type":"text","value":"対象者"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ホントのほんとに基本の「キ」の字ぐらいの内容なので、ある程度諸々の管理に慣れている人はそのままスルーしてもらった方がよい気がする。研究室に入って初めてプログラムを書いたり、実験を回したりする人向けの内容。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"MLOpsとタイトルに名前がついているが、Airflow使ってパイプライン作って、MLFlowとか導入しちゃって学習済みモデルとハイパラ管理でわっしょいみたいな内容ではないのでご注意を（この手大規模なやつは企業のTechブログの方が詳しいはず）。あと一部宗教色が強いかもしれないのでお気をつけて。"}]},{"type":"element","tag":"h2","props":{"id":"事の発端というかぼやきというか"},"children":[{"type":"text","value":"事の発端というかぼやきというか…"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"学部で研究室とやらに配属されたことがなかったので、大学院入学後にはじめて研究室に配属された。\nミーハーなので機械学習系の研究室を選択し、「大学の研究ってどんな感じなんだろう～、やっぱりクールでかっこいいシステムの上で効率的に実験回したりしてるのかしら（アーニャワクワク！）」と思っていたら、各々が我流を極めてとっちらかった感じの実験環境になっていてちょっとびっくりした。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"今考えるとインダストリ側とアカデミック側では人の新陳代謝が異なるのと、継続的な改修が必要かどうかや、営利目的かどうかといった点で状態が異なるので、まぁそんなもんといえばそんかなぁ～と思うようにはなってきた。とはいえ、雑に実験を回すのは気に入らないので、最低限の実験管理方法を確立して、細々と改良して現在に至る。"}]},{"type":"element","tag":"h2","props":{"id":"大まかな説明"},"children":[{"type":"text","value":"大まかな説明"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mustで行うべき事は以下の3つ"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"とにかくプログラムはGitの管理下に置くべし"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"使っている言語やライブラリのバージョンはしっかり固定するべし"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"実験ログが確実に残るようにするべし"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"余力があれば行うべき事は以下のn個(適宜追加するつもり)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"よく使うコマンドは固めるべし"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"といった形で大きく2つに分けて書いていく。"}]},{"type":"element","tag":"h2","props":{"id":"とにかくプログラムはgitの管理下に置くべし"},"children":[{"type":"text","value":"とにかくプログラムはGitの管理下に置くべし"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"当たり前ではあるが、意外と当たり前では無い選手権ランキング一位だと思っている。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n当初自分が触り始めた時も、Gitの操作に慣れるまでは時間がかかった覚えがあるので、意外と導入コストが高いというのは理解している。なのでとりあえず以下の3コマンドだけ覚えるべし。"}]},{"type":"element","tag":"code","props":{"code":"git add\ngit commit\ngit push\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git add\ngit commit\ngit push\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"とりあえずこれだけ覚えていればなんとかなる。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n細かい説明ここ("},{"type":"element","tag":"a","props":{"href":"https://github.com/kaityo256/github","rel":["nofollow"]},"children":[{"type":"text","value":"GitHub演習"}]},{"type":"text","value":")に掲載されているので、適宜参照しながら頑張るべし。"}]},{"type":"element","tag":"h2","props":{"id":"使っている言語やライブラリのバージョンはしっかり固定するべし"},"children":[{"type":"text","value":"使っている言語やライブラリのバージョンはしっかり固定するべし"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ここに関しては人によって色々と方法はあると思うが、現状デファクトスタンダードだと個人的に思っているのはPythonのバージョンは"},{"type":"element","tag":"a","props":{"href":"https://github.com/pyenv/pyenv","rel":["nofollow"]},"children":[{"type":"text","value":"pyenv"}]},{"type":"text","value":"で、使っているライブラリのバージョンは"},{"type":"element","tag":"a","props":{"href":"https://github.com/python-poetry/poetry","rel":["nofollow"]},"children":[{"type":"text","value":"Poetry"}]},{"type":"text","value":"で管理する方法。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"基本的にPythonしか使わない前提でこの2つを選んだため、いや"},{"type":"element","tag":"a","props":{"href":"https://asdf-vm.com/","rel":["nofollow"]},"children":[{"type":"text","value":"asdf"}]},{"type":"text","value":"だ"},{"type":"element","tag":"a","props":{"href":"https://github.com/jetpack-io/devbox","rel":["nofollow"]},"children":[{"type":"text","value":"devbox"}]},{"type":"text","value":"だというであればそちらでも全然構わない。Python以外の言語も日常的に使う人はそもそもパッケージマネージャがバラけてめんどくさい問題があるので、そういう場合はこれらのツールの方がいいと思う。が、今回その層は対象外なので上記のpyenvとpoetryを紹介する。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Poetryの代わりにPipenv使ったりしてもいいが、多分通常用途では特に大差が無い。あと"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"絶対にAnacondaは使うな！あとプレーンな環境にpip installするな！"}]},{"type":"text","value":" いや、condaで入れるNumpyの方が計算スピード早いんや！！ワイは絶対conda使うんや！！という場合はAnacondaでゴニョゴニョしてもいいと思う。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pyenvのインストールに関しては、"},{"type":"element","tag":"a","props":{"href":"https://github.com/pyenv/pyenv#installation","rel":["nofollow"]},"children":[{"type":"text","value":"GitHubのInstallationの項目に"}]},{"type":"text","value":"導入方法が書いてあって、Poetryのインストールに関しては"},{"type":"element","tag":"a","props":{"href":"https://python-poetry.org/docs/","rel":["nofollow"]},"children":[{"type":"text","value":"公式ドキュメントのIntroduction"}]},{"type":"text","value":"部分に導入方法が書かれているのでチェケラ。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ここで注意する事はライブラリをインストールする時はバージョン指定すること、PyTorchを使う時は"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"poetry add"}]},{"type":"text","value":"ではインストールできないので、URL指定でインストールすることの2つ。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"短期的に使う分にはライブラリのメジャーバージョンがアップデートされる問題にぶち当たらないかもしれないが、念のためバージョンは固定しておいた方が良い（メジャーバージョン云々に関しては"},{"type":"element","tag":"a","props":{"href":"https://semver.org/lang/ja/","rel":["nofollow"]},"children":[{"type":"text","value":"セマンティックバージョニング"}]},{"type":"text","value":"を参照）。要するに、"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"poetry add \"numpy>=1.24.1\""}]},{"type":"text","value":"のようにしてインストールするべしということが言いたい。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"次にPyTorchに関してだが、実はPyTorchは"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"poetry add pytorch"}]},{"type":"text","value":"でインストールできない。\n"},{"type":"element","tag":"a","props":{"href":"https://zenn.dev/yag_ays/articles/a6c84622f558ee","rel":["nofollow"]},"children":[{"type":"text","value":"任意のCUDAバージョンのPyTorchをPoetryでインストールする"}]},{"type":"text","value":"が一番良くまとまっている気がしているので、対処法に関してはこちらの記事を参照して適宜対処して欲しい。"}]},{"type":"element","tag":"h2","props":{"id":"実験ログが確実に残るようにするべし"},"children":[{"type":"text","value":"実験ログが確実に残るようにするべし"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"logger使ってロギングしたりすることに慣れているなら、うまいこと自分でログファイルとか作ってえんやこらさっさでいいと思うが、基本的に"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"print"}]},{"type":"text","value":"しか使えない人が多い気がしている(ちなみにloggerの使い方も色々あるが、一応Python本家が"},{"type":"element","tag":"a","props":{"href":"https://docs.python.org/3/howto/logging.html","rel":["nofollow"]},"children":[{"type":"text","value":"Logging HOW TO"}]},{"type":"text","value":"というページを作っているので気になった方はこちらを参照)。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"あとアドホックな実験を行う場合はNotebookで実験し、うまくいくことが判明すればスクリプトファイルに出力する等の方法を取るのが一般的かもしれないが、Notebookから入るとスクリプトファイルが書けない問題も存在する（クラスとか関数とか切らずに書いたり、ディレクトリ構成とかを気にせずに書いたりするため？）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"一応そのままNotebookからスクリプトファイルに変換できるが、慣れてないと往々にしてNotebookを頭から実行するとよくコケる。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"さてどうしたもんかという事で、暫定的な解決策として"},{"type":"element","tag":"a","props":{"href":"https://github.com/nteract/papermill","rel":["nofollow"]},"children":[{"type":"text","value":"papermill"}]},{"type":"text","value":"を使って実験を回すという方法で対処する。ざっくり説明すると、これを使うとNotebookをスクリプトファイルのように実行することができる。諸々の使い方は適宜検索してくださいまし。一応"},{"type":"element","tag":"a","props":{"href":"https://papermill.readthedocs.io/en/latest/","rel":["nofollow"]},"children":[{"type":"text","value":"公式ドキュメント"}]},{"type":"text","value":"のリンクは置いておくが、正直これをみても使い方に関してイメージは沸かないと思う。"}]},{"type":"element","tag":"h2","props":{"id":"最後に"},"children":[{"type":"text","value":"最後に"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"2023年になる前までに書き上げたかったので、かなり横暴な説明になっている気がする。\n流石にこれでは伝わらんだろうと思って"},{"type":"element","tag":"a","props":{"href":"https://github.com/k0tk267/minimal-mlops","rel":["nofollow"]},"children":[{"type":"text","value":"テンプレート"}]},{"type":"text","value":"を作って見ることにした。一応まだ工事中ではあるが、それっぽい形になっていたら適宜参照してもらって、ついでにスターなんかつけちゃってくれたりすると嬉しい。"}]}]},"date":"2022-12-31T00:00:00.000Z","layout":"article","cover":"/posts/naist-entrance-exam-2021/cover.jpg","id":"naist-entrance-exam-2021.md","tags":["MLOps"],"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"はじめに"},"children":[{"type":"text","value":"はじめに"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"年末に何か書こうかなぁ～と思っていたら、あと数時間で2022年が終わってしまうことが発覚した。\nそこで、ここ一年研究室で機械学習周りの実験を回す時のTipsが溜まってきたので、超特急でまとめてみる。"}]},{"type":"element","tag":"h2","props":{"id":"対象者"},"children":[{"type":"text","value":"対象者"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ホントのほんとに基本の「キ」の字ぐらいの内容なので、ある程度諸々の管理に慣れている人はそのままスルーしてもらった方がよい気がする。研究室に入って初めてプログラムを書いたり、実験を回したりする人向けの内容。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"MLOpsとタイトルに名前がついているが、Airflow使ってパイプライン作って、MLFlowとか導入しちゃって学習済みモデルとハイパラ管理でわっしょいみたいな内容ではないのでご注意を（この手大規模なやつは企業のTechブログの方が詳しいはず）。あと一部宗教色が強いかもしれないのでお気をつけて。"}]},{"type":"element","tag":"h2","props":{"id":"事の発端というかぼやきというか"},"children":[{"type":"text","value":"事の発端というかぼやきというか…"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"学部で研究室とやらに配属されたことがなかったので、大学院入学後にはじめて研究室に配属された。\nミーハーなので機械学習系の研究室を選択し、「大学の研究ってどんな感じなんだろう～、やっぱりクールでかっこいいシステムの上で効率的に実験回したりしてるのかしら（アーニャワクワク！）」と思っていたら、各々が我流を極めてとっちらかった感じの実験環境になっていてちょっとびっくりした。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"今考えるとインダストリ側とアカデミック側では人の新陳代謝が異なるのと、継続的な改修が必要かどうかや、営利目的かどうかといった点で状態が異なるので、まぁそんなもんといえばそんかなぁ～と思うようにはなってきた。とはいえ、雑に実験を回すのは気に入らないので、最低限の実験管理方法を確立して、細々と改良して現在に至る。"}]},{"type":"element","tag":"h2","props":{"id":"大まかな説明"},"children":[{"type":"text","value":"大まかな説明"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mustで行うべき事は以下の3つ"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"とにかくプログラムはGitの管理下に置くべし"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"使っている言語やライブラリのバージョンはしっかり固定するべし"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"実験ログが確実に残るようにするべし"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"余力があれば行うべき事は以下のn個(適宜追加するつもり)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"よく使うコマンドは固めるべし"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"といった形で大きく2つに分けて書いていく。"}]},{"type":"element","tag":"h2","props":{"id":"とにかくプログラムはgitの管理下に置くべし"},"children":[{"type":"text","value":"とにかくプログラムはGitの管理下に置くべし"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"当たり前ではあるが、意外と当たり前では無い選手権ランキング一位だと思っている。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n当初自分が触り始めた時も、Gitの操作に慣れるまでは時間がかかった覚えがあるので、意外と導入コストが高いというのは理解している。なのでとりあえず以下の3コマンドだけ覚えるべし。"}]},{"type":"element","tag":"code","props":{"code":"git add\ngit commit\ngit push\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git add\ngit commit\ngit push\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"とりあえずこれだけ覚えていればなんとかなる。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n細かい説明ここ("},{"type":"element","tag":"a","props":{"href":"https://github.com/kaityo256/github","rel":["nofollow"]},"children":[{"type":"text","value":"GitHub演習"}]},{"type":"text","value":")に掲載されているので、適宜参照しながら頑張るべし。"}]},{"type":"element","tag":"h2","props":{"id":"使っている言語やライブラリのバージョンはしっかり固定するべし"},"children":[{"type":"text","value":"使っている言語やライブラリのバージョンはしっかり固定するべし"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ここに関しては人によって色々と方法はあると思うが、現状デファクトスタンダードだと個人的に思っているのはPythonのバージョンは"},{"type":"element","tag":"a","props":{"href":"https://github.com/pyenv/pyenv","rel":["nofollow"]},"children":[{"type":"text","value":"pyenv"}]},{"type":"text","value":"で、使っているライブラリのバージョンは"},{"type":"element","tag":"a","props":{"href":"https://github.com/python-poetry/poetry","rel":["nofollow"]},"children":[{"type":"text","value":"Poetry"}]},{"type":"text","value":"で管理する方法。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"基本的にPythonしか使わない前提でこの2つを選んだため、いや"},{"type":"element","tag":"a","props":{"href":"https://asdf-vm.com/","rel":["nofollow"]},"children":[{"type":"text","value":"asdf"}]},{"type":"text","value":"だ"},{"type":"element","tag":"a","props":{"href":"https://github.com/jetpack-io/devbox","rel":["nofollow"]},"children":[{"type":"text","value":"devbox"}]},{"type":"text","value":"だというであればそちらでも全然構わない。Python以外の言語も日常的に使う人はそもそもパッケージマネージャがバラけてめんどくさい問題があるので、そういう場合はこれらのツールの方がいいと思う。が、今回その層は対象外なので上記のpyenvとpoetryを紹介する。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Poetryの代わりにPipenv使ったりしてもいいが、多分通常用途では特に大差が無い。あと"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"絶対にAnacondaは使うな！あとプレーンな環境にpip installするな！"}]},{"type":"text","value":" いや、condaで入れるNumpyの方が計算スピード早いんや！！ワイは絶対conda使うんや！！という場合はAnacondaでゴニョゴニョしてもいいと思う。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pyenvのインストールに関しては、"},{"type":"element","tag":"a","props":{"href":"https://github.com/pyenv/pyenv#installation","rel":["nofollow"]},"children":[{"type":"text","value":"GitHubのInstallationの項目に"}]},{"type":"text","value":"導入方法が書いてあって、Poetryのインストールに関しては"},{"type":"element","tag":"a","props":{"href":"https://python-poetry.org/docs/","rel":["nofollow"]},"children":[{"type":"text","value":"公式ドキュメントのIntroduction"}]},{"type":"text","value":"部分に導入方法が書かれているのでチェケラ。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ここで注意する事はライブラリをインストールする時はバージョン指定すること、PyTorchを使う時は"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"poetry add"}]},{"type":"text","value":"ではインストールできないので、URL指定でインストールすることの2つ。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"短期的に使う分にはライブラリのメジャーバージョンがアップデートされる問題にぶち当たらないかもしれないが、念のためバージョンは固定しておいた方が良い（メジャーバージョン云々に関しては"},{"type":"element","tag":"a","props":{"href":"https://semver.org/lang/ja/","rel":["nofollow"]},"children":[{"type":"text","value":"セマンティックバージョニング"}]},{"type":"text","value":"を参照）。要するに、"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"poetry add \"numpy>=1.24.1\""}]},{"type":"text","value":"のようにしてインストールするべしということが言いたい。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"次にPyTorchに関してだが、実はPyTorchは"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"poetry add pytorch"}]},{"type":"text","value":"でインストールできない。\n"},{"type":"element","tag":"a","props":{"href":"https://zenn.dev/yag_ays/articles/a6c84622f558ee","rel":["nofollow"]},"children":[{"type":"text","value":"任意のCUDAバージョンのPyTorchをPoetryでインストールする"}]},{"type":"text","value":"が一番良くまとまっている気がしているので、対処法に関してはこちらの記事を参照して適宜対処して欲しい。"}]},{"type":"element","tag":"h2","props":{"id":"実験ログが確実に残るようにするべし"},"children":[{"type":"text","value":"実験ログが確実に残るようにするべし"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"logger使ってロギングしたりすることに慣れているなら、うまいこと自分でログファイルとか作ってえんやこらさっさでいいと思うが、基本的に"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"print"}]},{"type":"text","value":"しか使えない人が多い気がしている(ちなみにloggerの使い方も色々あるが、一応Python本家が"},{"type":"element","tag":"a","props":{"href":"https://docs.python.org/3/howto/logging.html","rel":["nofollow"]},"children":[{"type":"text","value":"Logging HOW TO"}]},{"type":"text","value":"というページを作っているので気になった方はこちらを参照)。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"あとアドホックな実験を行う場合はNotebookで実験し、うまくいくことが判明すればスクリプトファイルに出力する等の方法を取るのが一般的かもしれないが、Notebookから入るとスクリプトファイルが書けない問題も存在する（クラスとか関数とか切らずに書いたり、ディレクトリ構成とかを気にせずに書いたりするため？）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"一応そのままNotebookからスクリプトファイルに変換できるが、慣れてないと往々にしてNotebookを頭から実行するとよくコケる。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"さてどうしたもんかという事で、暫定的な解決策として"},{"type":"element","tag":"a","props":{"href":"https://github.com/nteract/papermill","rel":["nofollow"]},"children":[{"type":"text","value":"papermill"}]},{"type":"text","value":"を使って実験を回すという方法で対処する。ざっくり説明すると、これを使うとNotebookをスクリプトファイルのように実行することができる。諸々の使い方は適宜検索してくださいまし。一応"},{"type":"element","tag":"a","props":{"href":"https://papermill.readthedocs.io/en/latest/","rel":["nofollow"]},"children":[{"type":"text","value":"公式ドキュメント"}]},{"type":"text","value":"のリンクは置いておくが、正直これをみても使い方に関してイメージは沸かないと思う。"}]},{"type":"element","tag":"h2","props":{"id":"最後に"},"children":[{"type":"text","value":"最後に"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"2023年になる前までに書き上げたかったので、かなり横暴な説明になっている気がする。\n流石にこれでは伝わらんだろうと思って"},{"type":"element","tag":"a","props":{"href":"https://github.com/k0tk267/minimal-mlops","rel":["nofollow"]},"children":[{"type":"text","value":"テンプレート"}]},{"type":"text","value":"を作って見ることにした。一応まだ工事中ではあるが、それっぽい形になっていたら適宜参照してもらって、ついでにスターなんかつけちゃってくれたりすると嬉しい。"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"はじめに","depth":2,"text":"はじめに"},{"id":"対象者","depth":2,"text":"対象者"},{"id":"事の発端というかぼやきというか","depth":2,"text":"事の発端というかぼやきというか…"},{"id":"大まかな説明","depth":2,"text":"大まかな説明"},{"id":"とにかくプログラムはgitの管理下に置くべし","depth":2,"text":"とにかくプログラムはGitの管理下に置くべし"},{"id":"使っている言語やライブラリのバージョンはしっかり固定するべし","depth":2,"text":"使っている言語やライブラリのバージョンはしっかり固定するべし"},{"id":"実験ログが確実に残るようにするべし","depth":2,"text":"実験ログが確実に残るようにするべし"},{"id":"最後に","depth":2,"text":"最後に"}]}},"_type":"markdown","_id":"content:posts:minimal-mlops.md","_source":"content","_file":"posts/minimal-mlops.md","_extension":"md"}